type: note
init_time: '2020-01-15 07:11:57.073754'
parents:
- d7c97fb962ebeec3827179ecd2471c7720a8d86d
title: cf's 1288A problem
text: "看了看其他人的回答，发现了有人求最小值的时候没有用循环，\n还用到了莫名奇妙的变量，我想，莫非这是用导数算出来的吗？\n\n于是我找到了导数等于0的点，然后带入原函数，发现了眼熟的变量......\n\
  我的天呐，我竟然看到别人用数学解题，这算不算优化过度？\n我蛮喜欢数学的，但是我也喜欢简单直接的可读性，\n我就佩服佩服一下了。\n我还是用循环来做题吧。\n\n\
  还有人写了一行Perl代码，而相比之下我写了31行才搞出来。\n先生真若神人也。\n\n在我自己的代码里也有不少的问题，希望在C++里变量重用，\n导致一些判断的时候出了不想出现的结果，\n\
  毕竟原值已经被更改了。\n\n这是一个问题，我下次一定要仔细看看，多做题，争取养成0bug的习惯。\n\n（又看了若干道，用数学方法来做的数不胜数，但是也看到了一些有趣的工具）\n\
  \n在\\code{cmath}中提供的\\code{std::ceil}和\\code{std::floor}，\n它们可以把float类型的值转换为相近的类整型浮点数。\n\
  其中\\code{std::ceil}负责把数进行``上升''，\n而\\code{std::floor}负责把数进行``下降''。\n\n除此之外还有\\code{std::round}和\\\
  code{std::trunc}。\n都是对浮点数进行离散的函数。\n\n我自己是自己写了一个函数来实现\\code{std::ceil}的功能，性能不知道会差多少，但应该没差多少。\n"
