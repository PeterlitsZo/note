type: note
init_time: '2020-01-12 12:17:27.624951'
title: Python的编码问题
parents:
- d7c97fb962ebeec3827179ecd2471c7720a8d86d
text: "尝试用\\code{print('...', file=out\\_put\\_file)}来进行文本输出，\n发现输出的文本不是用\\code{UTF-8}来编码的，\n\
  而是好像用的国标（国家的标准？）\n\n在\\code{str}中字符是用\\code{unicode}来编码的，是没有被\\code{encode}的二进制数据，\n\
  输出到文件，输出的内容编码是由系统的配置决定的。\n\n猜想：\\code{open}时会指定\\code{encoding}可以解决这个问题。\n\n\\code{open}时指定\\\
  code{encoding}会有带有编码信息的属性的文本对象。\n因为有状态的影响，所以该对象的\\code{write method}会用编码下的二进制实现去写文件。\n\
  \n而\\code{print}可以指定\\code{file}，但是它（应该）不会读取文件内部的编码状态，\n（这个时候我想起来了，有时用\\code{u8}编码的时候好像会在文件头留下一个特别的标记？）\n\
  而是直接用系统指定的编码格式去输出二进制数据去写数据。\n\n猜想：\\code{print}是把文件输出到\\code{sys.stdout}上（应该，至少意思是这样）。\n\
  输出的环境是由系统的配置/环境决定的，为了环境能够正常显示文本数据，\n就应该会用配置下的文件编码格式来编码\\code{Unicode}的数据流，\n这也是为什么它不会去读取文本文件的编码状态的原因吧？\n\
  （甚至还没有参数可以调节输出的编码状态，这样）\n"
